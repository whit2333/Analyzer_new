* sos_scin_parms.cmn -  two common blocks:
*
*    sos_scin_parms - variables from the sos_positions.parm file
*    sos_tof_parms  - tof correction parameters and position parameters
*                     converted to arrays over plane,counter by s_init_scin.
*
*    NOTE:  Variables whose names start with sHODO are arrays over
*           plane and counter.  sSCIN is used for parameters from the
*           .parm files and for arrays over hits.
*
*       Modified 23 March 1994   DFG
*           Add definition of snum_scin_elements and set parameter value
*
* $Log: sos_scin_parms.cmn,v $
* Revision 1.8  1996/09/04 16:31:26  saw
* (JRA) Add misc scaler
*
* Revision 1.7  1996/01/24 16:20:17  saw
* (JRA) Make smisc_dec_data two dimensional
*
* Revision 1.6  1995/08/11 16:35:55  cdaq
* (JRA) Remove old dpos stuff
*       Add sscin_zero accumulators
*
* Revision 1.5  1995/05/22  19:11:54  cdaq
* (SAW) Split gen_data_data_structures into gen, hms, sos, and coin parts.
* Make pedestal arrays real.  Add sos_scin_positions and sos_misc_parms commons
*
* Revision 1.4  1995/03/13  19:09:11  cdaq
* (JRA) Move snum_scin_elements to gen_data_structures, remove
*       sscin_num_counters.  Change sscin_??_top and _left to center and offset.
*       Add sscin_??_spacing parms.  Change shodo_center_coord to shodo_center.
*       Add shodo_???_minph tables.
*
* Revision 1.3  1994/11/21  18:01:35  cdaq
* * (SPB) Recopied from hms file and modified names for SOS
*
* Revision 1.2  1994/08/05  21:00:21  cdaq
* (SAW) Add makereg directive with required include files
*       Add "CTPTYPE=parm" directive for auto generation of CTP reg calls
*
* Revision 1.1  1994/04/12  21:15:29  cdaq
* Initial revision
*
*     The following include statments must precede the inclusion of this
*     file in each routine that uses it.  The *%% syntax is also a
*     directive to makereg to tell it to include the code in the program
*     that it generates.
*
*%%   include 'sos_data_structures.cmn'
*
*     CTPTYPE=parm
*  
* from parameter file
      integer*4 sscin_1x_nr
      integer*4 sscin_1y_nr
      integer*4 sscin_2x_nr
      integer*4 sscin_2y_nr
c      integer*4 sscin_num_counters(SNUM_SCIN_PLANES)
      integer*4 sdebugprintscinraw
      integer*4 sdebugprintscindec
      integer*4 sdebugprinttoftracks
      integer*4 sdebugprinttracktests
      real*4 sscin_1x_zpos
      real*4 sscin_1y_zpos
      real*4 sscin_2x_zpos
      real*4 sscin_2y_zpos
      real*4 sscin_1x_dzpos
      real*4 sscin_1y_dzpos
      real*4 sscin_2x_dzpos
      real*4 sscin_2y_dzpos
      real*4 sscin_1x_left
      real*4 sscin_1y_top
      real*4 sscin_2x_left
      real*4 sscin_2y_top
      real*4 sscin_1x_right
      real*4 sscin_1y_bot
      real*4 sscin_2x_right
      real*4 sscin_2y_bot
      real*4 sscin_1x_center(snum_scin_elements)
      real*4 sscin_1y_center(snum_scin_elements)
      real*4 sscin_2x_center(snum_scin_elements)
      real*4 sscin_2y_center(snum_scin_elements)
      real*4 sscin_1x_offset
      real*4 sscin_1y_offset
      real*4 sscin_2x_offset
      real*4 sscin_2y_offset
      real*4 sscin_1x_size
      real*4 sscin_1y_size
      real*4 sscin_2x_size
      real*4 sscin_2y_size
      real*4 sscin_1x_spacing
      real*4 sscin_1y_spacing
      real*4 sscin_2x_spacing
      real*4 sscin_2y_spacing
      real*4 sscin_all_ped_pos(snum_scin_planes,snum_scin_elements)
      real*4 sscin_all_ped_neg(snum_scin_planes,snum_scin_elements)
 
      common/sos_scin_parms/            !variables from s_positions.parm
     &     sscin_1x_nr, sscin_1y_nr,    !Elements per plane
     &     sscin_2x_nr, sscin_2y_nr,
     &     sscin_1x_zpos, sscin_1y_zpos, !z position of plane.
     &     sscin_2x_zpos, sscin_2y_zpos,
     &     sscin_1x_dzpos, sscin_1y_dzpos,
     &     sscin_2x_dzpos, sscin_2y_dzpos,
     &     sscin_1x_left, sscin_1y_top, !position of 'negative'(??) end.
     &     sscin_2x_left, sscin_2y_top,
     &     sscin_1x_right, sscin_1y_bot, !position of 'positive'(??) end.
     &     sscin_2x_right, sscin_2y_bot,
     &     sscin_1x_center, sscin_1y_center, !center (transverse) of element.
     &     sscin_2x_center, sscin_2y_center,
     &     sscin_1x_size, sscin_1y_size, !width of elements.
     &     sscin_2x_size, sscin_2y_size,
     &     sscin_1x_spacing, sscin_1y_spacing, !separation of centers.
     &     sscin_2x_spacing, sscin_2y_spacing,
     &     sdebugprintscinraw,
     &     sdebugprintscindec,
     &     sdebugprinttoftracks,
     &     sdebugprinttracktests,
     &     sscin_all_ped_pos,
     &     sscin_all_ped_neg,
     &     sscin_1x_offset, sscin_1y_offset, !offset from nominal trans pos.
     &     sscin_2x_offset, sscin_2y_offset

* Physical paramteres of counters.  Use shodo_* for arrays that include
*   the entire hodoscope,  sscin_* for arrays that loop over hits.
      real*4 snum_scin_counters(snum_scin_planes)
      real*4 shodo_center(snum_scin_planes,snum_scin_elements)
      real*4 shodo_width(snum_scin_planes,snum_scin_elements)
      real*4 shodo_pos_coord(snum_scin_planes,snum_scin_elements)
      real*4 shodo_neg_coord(snum_scin_planes,snum_scin_elements)

* callibration type variables.
      real*4 shodo_slop(snum_scin_planes)
      real*4 shodo_vel_light(snum_scin_planes,snum_scin_elements)
      real*4 shodo_pos_sigma(snum_scin_planes,snum_scin_elements)
      real*4 shodo_neg_sigma(snum_scin_planes,snum_scin_elements)
      real*4 shodo_pos_phc_coeff(snum_scin_planes,snum_scin_elements)
      real*4 shodo_neg_phc_coeff(snum_scin_planes,snum_scin_elements)
      real*4 shodo_pos_time_offset(snum_scin_planes,snum_scin_elements)
      real*4 shodo_neg_time_offset(snum_scin_planes,snum_scin_elements)
      real*4 shodo_pos_minph(snum_scin_planes,snum_scin_elements) ! ADC offset for PH correction
      real*4 shodo_neg_minph(snum_scin_planes,snum_scin_elements) ! ADC offset for PH correction

* correction parameters and position information converted to arryas
* over plane and counter

      common/sos_tof_parms/
     &     snum_scin_counters,
     &     shodo_center,
     &     shodo_width,
     &     shodo_pos_coord,
     &     shodo_neg_coord,
     &     shodo_slop,
     &     shodo_vel_light,
     &     shodo_pos_sigma,
     &     shodo_neg_sigma,
     &     shodo_pos_phc_coeff,
     &     shodo_neg_phc_coeff,
     &     shodo_pos_time_offset,
     &     shodo_neg_time_offset,
     $     shodo_pos_minph,
     $     shodo_neg_minph
*
*
* sos_misc_parms.cmn -  misc tdc's filled as array over signal number
*         (tdc is sparsified, so the raw signals are array over hits)
*
*     CTPTYPE=parm
*
      integer*4 snum_misc_planes
      parameter(snum_misc_planes=2)     !(1=TDC, 2=ADC)
*
*
*     CTPTYPE=event
*
      integer*4 smisc_dec_data(smax_misc_hits,snum_misc_planes)
      integer*4 smisc_scaler(smax_misc_hits,snum_misc_planes)

      common/sos_misc_parms/
     &   smisc_dec_data,
     &   smisc_scaler


      integer*4 sscin_zero_pos(snum_scin_planes,snum_scin_elements)
      integer*4 sscin_zero_neg(snum_scin_planes,snum_scin_elements)
      integer*4 sscin_zero_num(snum_scin_planes,snum_scin_elements)
      real*4 sscin_zero_pave(snum_scin_planes,snum_scin_elements)
      real*4 sscin_zero_nave(snum_scin_planes,snum_scin_elements)

      common /sos_scin_zero/
     &    sscin_zero_pos,sscin_zero_neg,
     &    sscin_zero_num,
     &    sscin_zero_pave,sscin_zero_nave
